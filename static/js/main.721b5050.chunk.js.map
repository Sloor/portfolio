{"version":3,"sources":["components/SideBar/me.jpg","components/MyProjects/gradient.png","components/MyProjects/robots.png","components/MyProjects/facerecognition.png","components/Hero/Hero.js","components/SideBar/SideBar.js","components/MyProjects/MyProjects.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Hero","openProjects","_this","props","settingProjectsState","react_default","a","createElement","className","onClick","this","href","class","React","Component","SideBar","alt","src","me","target","MyProjects","closeProjects","document","getElementById","style","cssText","id","onMouseEnter","addLinkIcon","gradient","robots","facerecognition","App","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","projects","bind","assertThisInitialized","value","setState","components_Hero_Hero","components_SideBar_SideBar","components_MyProjects_MyProjects","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.721b5050.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/me.675c287a.jpg\";","module.exports = __webpack_public_path__ + \"static/media/gradient.adf6f77d.png\";","module.exports = __webpack_public_path__ + \"static/media/robots.f2eea234.png\";","module.exports = __webpack_public_path__ + \"static/media/facerecognition.a5e717f4.png\";","import React from 'react';\r\nimport './Hero.css';\r\n\r\nclass Hero extends React.Component {\r\n    openProjects = () =>{\r\n        this.props.settingProjectsState(true);\r\n    }\r\n    render() {\r\n        return (\r\n        <div className='hero'>\r\n            <div className='heroLayer'></div>\r\n           <a onClick={this.openProjects} href=\"#\" class=\"btn btn-white btn-animated\">My Projects</a>\r\n        </div>);\r\n    }\r\n}\r\n\r\nexport default Hero;","import React from 'react';\r\nimport './SideBar.css';\r\nimport me from './me.jpg';\r\n\r\nconst SideBar = () => {\r\n    return (\r\n    <div className='sidebar'>\r\n        <img className='me' alt='me' src={me}/>\r\n        <div className='layer'></div>\r\n        <p className='quote'><span><i class=\"fas fa-quote-left\"></i>     </span>Growth is painful    <span>     <i class=\"fas fa-quote-right\"></i></span><br/>\r\n           Change is painful<br/>\r\n           But nothing is more painful than staying stuck somewhere you don't belong</p>\r\n        <div className='socials'>\r\n            <a href=\"https://www.facebook.com/aseel.mohammad.71\" target=\"_blank\"><i class=\"fab fa-facebook-square\"></i></a>\r\n\t\t    <a href=\"https://www.linkedin.com/in/aseel-abu-sal-893a31a7/\" target=\"_blank\"><i class=\"fab fa-linkedin\"></i></a>\r\n\t\t    <a href=\"https://twitter.com/AbusalAseel\" target=\"_blank\"><i class=\"fab fa-twitter-square\"></i></a>\r\n            <a href=\"https://github.com/Sloor/\" target=\"_blank\"><i class=\"fab fa-github-square\"></i></a>\r\n        </div>\r\n    </div>\r\n    );\r\n}\r\n\r\nexport default SideBar;","import React from 'react';\r\nimport './MyProjects.css';\r\nimport gradient from './gradient.png';\r\nimport robots from './robots.png';\r\nimport facerecognition from './facerecognition.png';\r\n\r\nclass MyProjects extends React.Component {\r\n    closeProjects = () =>{\r\n        this.props.settingProjectsState(false);\r\n        document.getElementById('he').style.cssText='animation: fadeaway 1s;';\r\n    }\r\n\r\n    render () {\r\n        return (\r\n        <div className='projectsBlock'>\r\n            <div id='he' className='projectsSlides'>\r\n            <h2>My Projects On GitHub:</h2>\r\n            <i class=\"fas fa-caret-left\"></i>\r\n            <div onMouseEnter={this.addLinkIcon} className='imgFrame'>\r\n            <a href='https://github.com/Sloor/backgroundGenerator/tree/master/gradient'>\r\n            <img className='first' src={gradient} alt='gradientProj'/>\r\n            </a>\r\n                <div className='textover'>\r\n                <p>A website for trying different color gradients for designing purposes</p>\r\n                <i className=\"fas fa-external-link-alt\"></i>\r\n                </div>\r\n                \r\n            </div>\r\n            <div className='imgFrame'>\r\n            <a href='https://sloor.github.io/robotsearch/'><img className='second' src={robots} alt='robotsProj'/></a>\r\n                <div className='textover'>\r\n                <p>A simple page demonstrating searching using AJAX</p>\r\n                <i className=\"fas fa-external-link-alt\"></i>\r\n                </div>\r\n            </div>\r\n            <div className='imgFrame'>\r\n            <a href='https://sloor.github.io/facerecognition/'><img className='third' src={facerecognition} alt='todoProj'/></a>\r\n                <div className='textover'>\r\n                <p>A face recognition applicaiton that accepts a URL input</p>\r\n                <i className=\"fas fa-external-link-alt\"></i>\r\n                </div>\r\n            </div>\r\n            <i class=\"fas fa-caret-right\"></i>\r\n            </div>\r\n            <div onClick={this.closeProjects} className='projectsLayer'></div>\r\n        </div>\r\n        );   \r\n    }\r\n}\r\n\r\nexport default MyProjects;","import React, { Component } from 'react';\nimport Hero from './components/Hero/Hero';\nimport SideBar from './components/SideBar/SideBar';\nimport MyProjects from './components/MyProjects/MyProjects';\nimport './App.css';\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      projects:false,\n    }\n    this.settingProjectsState = this.settingProjectsState.bind(this);\n  }\n  settingProjectsState(value) {\n    this.setState({projects:value});\n  }\n  render() {\n    return (\n      <div className='App'>\n        <Hero settingProjectsState={this.settingProjectsState}/>\n        <SideBar />\n        {\n          (this.state.projects)?\n          <MyProjects settingProjectsState={this.settingProjectsState}/>\n          :''\n        }\n        \n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}